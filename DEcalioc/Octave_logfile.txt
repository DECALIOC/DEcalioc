error: called from
    load_packages at line 41 column 7
    pkg at line 411 column 7
    DEcalioc at line 38 column 3
error: package parallel is not installed
>> pkg list
Package Name         | Version | Installation directory
---------------------+---------+-----------------------
     communications  |   1.2.1 | C:\Octave\OCTAVE~1.2\share\octave\packages\communications-1.2.1
            control  |   3.0.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\control-3.0.0
     data-smoothing  |   1.3.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\data-smoothing-1.3.0
           database  |   2.4.2 | C:\Octave\OCTAVE~1.2\share\octave\packages\database-2.4.2
          dataframe  |   1.2.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\dataframe-1.2.0
              dicom  |   0.2.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\dicom-0.2.0
          financial  |   0.5.1 | C:\Octave\OCTAVE~1.2\share\octave\packages\financial-0.5.1
               fits  |   1.0.7 | C:\Octave\OCTAVE~1.2\share\octave\packages\fits-1.0.7
fuzzy-logic-toolkit  |   0.4.5 | C:\Octave\OCTAVE~1.2\share\octave\packages\fuzzy-logic-toolkit-0.4.5
                 ga  |  0.10.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\ga-0.10.0
            general  |   2.0.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\general-2.0.0
      generate_html  |   0.3.1 | C:\Octave\OCTAVE~1.2\share\octave\packages\generate_html-0.3.1
           geometry  |   3.0.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\geometry-3.0.0
                gsl  |   2.1.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\gsl-2.1.0
              image  |   2.6.2 | C:\Octave\OCTAVE~1.2\share\octave\packages\image-2.6.2
 instrument-control  |   0.3.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\instrument-control-0.3.0
           interval  |   3.1.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\interval-3.1.0
                 io  |  2.4.10 | C:\Octave\OCTAVE~1.2\share\octave\packages\io-2.4.10
     linear-algebra  |   2.2.2 | C:\Octave\OCTAVE~1.2\share\octave\packages\linear-algebra-2.2.2
               lssa  |   0.1.2 | C:\Octave\OCTAVE~1.2\share\octave\packages\lssa-0.1.2
              ltfat  |   2.2.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\ltfat-2.2.0
            mapping  |   1.2.1 | C:\Octave\OCTAVE~1.2\share\octave\packages\mapping-1.2.1
      miscellaneous  |   1.2.1 | C:\Octave\OCTAVE~1.2\share\octave\packages\miscellaneous-1.2.1
                nan  |   3.1.4 | C:\Octave\OCTAVE~1.2\share\octave\packages\nan-3.1.4
             netcdf  |  1.0.11 | C:\Octave\OCTAVE~1.2\share\octave\packages\netcdf-1.0.11
              nurbs  |  1.3.13 | C:\Octave\OCTAVE~1.2\share\octave\packages\nurbs-1.3.13
                ocs  |   0.1.5 | C:\Octave\OCTAVE~1.2\share\octave\packages\ocs-0.1.5
             odepkg  |   0.8.5 | C:\Octave\OCTAVE~1.2\share\octave\packages\odepkg-0.8.5
              optim  |   1.5.2 | C:\Octave\OCTAVE~1.2\share\octave\packages\optim-1.5.2
         quaternion  |   2.4.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\quaternion-2.4.0
           queueing  |   1.2.5 | C:\Octave\OCTAVE~1.2\share\octave\packages\queueing-1.2.5
             signal  |   1.3.2 | C:\Octave\OCTAVE~1.2\share\octave\packages\signal-1.3.2
            sockets  |   1.2.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\sockets-1.2.0
            specfun  |   1.1.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\specfun-1.1.0
            splines  |   1.3.2 | C:\Octave\OCTAVE~1.2\share\octave\packages\splines-1.3.2
         statistics  |   1.3.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\statistics-1.3.0
                stk *|   2.5.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\stk-2.5.0
            strings  |   1.2.0 | C:\Octave\OCTAVE~1.2\share\octave\packages\strings-1.2.0
             struct  |  1.0.14 | C:\Octave\OCTAVE~1.2\share\octave\packages\struct-1.0.14
             tisean  |   0.2.3 | C:\Octave\OCTAVE~1.2\share\octave\packages\tisean-0.2.3
                tsa  |   4.4.5 | C:\Octave\OCTAVE~1.2\share\octave\packages\tsa-4.4.5
              video  |   1.2.4 | C:\Octave\OCTAVE~1.2\share\octave\packages\video-1.2.4
            windows  |   1.2.4 | C:\Octave\OCTAVE~1.2\share\octave\packages\windows-1.2.4
             zeromq  |   1.2.1 | C:\Octave\OCTAVE~1.2\share\octave\packages\zeromq-1.2.1
>> pkg install parallel-3.1.1.tar.gz 
checking for mkoctfile... C:/Octave/OCTAVE~1.2/bin/mkoctfile-4.2.2.exe
checking for octave-config... C:/Octave/OCTAVE~1.2/bin/octave-config-4.2.2.exe
checking for a sed that does not truncate output... /usr/bin/sed
checking whether the C++ compiler works... yes
checking for C++ compiler default output file name... a.exe
checking for suffix of executables... .exe
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking for g++ option to enable C++11 features... none needed
checking how to run the C++ preprocessor... g++ -E
checking for gcc... gcc
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking gnutls/gnutls.h usability... yes
checking gnutls/gnutls.h presence... yes
checking for gnutls/gnutls.h... yes
checking for gnutls_global_init in -lgnutls... yes
checking for pkg-config... pkg-config
checking for gnutls_global_init_extra in -lgnutls-extra... no
checking sys/socket.h usability... no
checking sys/socket.h presence... no
checking for sys/socket.h... no
checking winsock2.h usability... yes
checking winsock2.h presence... yes
checking for winsock2.h... yes
checking for socket in -lws2_32... yes
checking arpa/inet.h usability... no
checking arpa/inet.h presence... no
checking for arpa/inet.h... no
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking malloc.h usability... yes
checking malloc.h presence... yes
checking for malloc.h... yes
checking sys/malloc.h usability... no
checking sys/malloc.h presence... no
checking for sys/malloc.h... no
checking netdb.h usability... no
checking netdb.h presence... no
checking for netdb.h... no
checking netinet/in.h usability... no
checking netinet/in.h presence... no
checking for netinet/in.h... no
checking stdio_ext.h usability... no
checking stdio_ext.h presence... no
checking for stdio_ext.h... no
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking sys/time.h usability... yes
checking sys/time.h presence... yes
checking for sys/time.h... yes
checking termios.h usability... no
checking termios.h presence... no
checking for termios.h... no
checking for unistd.h... (cached) yes
checking for stdbool.h that conforms to C99... yes
checking for _Bool... yes
checking for int32_t... yes
checking for mode_t... yes
checking for pid_t... yes
checking for size_t... yes
checking for ssize_t... yes
checking for uint32_t... yes
checking for error_at_line... no
checking vfork.h usability... no
checking vfork.h presence... no
checking for vfork.h... no
checking for fork... no
checking for vfork... no
checking for _LARGEFILE_SOURCE value needed for large files... no
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... yes
checking return type of signal handlers... void
checking for memset... yes
checking for mkdir... yes
checking for modf... yes
checking for select... yes
checking for strchr... yes
checking for strdup... yes
checking for uname... no

error: called from
    install at line 200 column 5
    pkg at line 394 column 9
pkg: error running the configure script for parallel.
error: called from
    configure_make at line 78 column 9
    install at line 192 column 7
    pkg at line 394 column 9
>> clc
>> simDataFromHead
Obtaining runtime and processing cores information...
error: called from
    simDataFromHead at line 19 column 10
error: 'model' undefined near line 19 column 33
>> simDataFromHead
Obtaining runtime and processing cores information...
error: called from
    simDataFromHead at line 25 column 3
error: 'startsWith' undefined near line 25 column 10
>> str
str = ### Input Parameters for LIGGGHTS Simulation

>> simDataFromHead
Obtaining runtime and processing cores information...
error: called from
    simDataFromHead at line 56 column 11
error: vertical dimensions mismatch (1x9 vs 1x1)
>> simData = {walltime; processors; queue; nodes; mpiProc};
>> simData
simData = 
{
  [1,1] = 200:00:00
  [2,1] =  4
  [3,1] = default
  [4,1] =  1
  [5,1] =  4
}
>> simDataFromHead
Obtaining runtime and processing cores information...
>> simDataFromHead
>> simData(1)
ans = 
{
  [1,1] = 200:00:00
}
>> simData(2)
ans = 
{
  [1,1] =  4
}
>> test1 = simData(1)
test1 = 
{
  [1,1] = 200:00:00
}
>> test2 = simData(2)
test2 = 
{
  [1,1] =  4
}
>> test1
test1 = 
{
  [1,1] = 200:00:00
}
>> simData{1,1}
ans = 200:00:00
>> test1 =simData{1,1}
test1 = 200:00:00
>> test2 =simData{2,1}
test2 =  4
>> test2 =simData{2,2}
error: simData(_,2): but simData has size 5x1
>> test2 =simData{2,1}
test2 =  4
>> test3 = simData{1}
test3 = 200:00:00
>> test3 = simData{2}
test3 =  4
>> fileID
fileID =  6
>> writeJob
error: called from
    writeJob at line 17 column 11
error: 'model' undefined near line 17 column 29
>> writeJob
error: called from
    writeJob at line 29 column 6
error: 'folderName' undefined near line 29 column 39
>> writeJob
debug> dbquit

>> writeJob
debug> str
str = #PBS -q default

debug> 
>> writeJob
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
debug> 
>> clc
>> A{1}
ans = #!/bin/bash
>> writeJob
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
debug> A
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
debug> A{4}
ans = #PBS -l nodes=1:ppn=0,walltime=00:00:00
debug> A{4} = strrep(A{4},'walltime=00:00:00',['walltime=',walltime])
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
debug> 
>> writeJob
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
test
debug> A
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
debug>   A{4} = strrep(A{4},'walltime=00:00:00',['walltime=',walltime]);
debug>   A{4} = strrep(A{4},'walltime=00:00:00',['walltime=',walltime]);
debug>   % Change processors (line 4)
debug>   A{4} = strrep(A{4},'ppn=0',['ppn=',num2str(processors)]);
debug>   A{4} = strrep(A{4},'ppn=0',['ppn=',num2str(processors)]);
debug>   % Change queue (line 2)
debug>   A{2} = strrep(A{2},'-q default',['-q ',queue]);
debug>   A{2} = strrep(A{2},'-q default',['-q ',queue]);
debug>   % Change nodes (line 4)
debug>   A{4} = strrep(A{4},'nodes=1',['nodes=',num2str(nodes)]);
debug> A
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=4,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
debug> 
>> A
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=4,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
>> writeJob
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=4,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=4,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
error: called from
    writeJob at line 66 column 11
error: 'projectname' undefined near line 66 column 40
>> writeJob
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=4,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=4,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=0,walltime=00:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 0 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
>> writeJob
>> A
A = 
{
  [1,1] = #!/bin/bash
  [1,2] = #PBS -q default
  [1,3] = #PBS -j oe
  [1,4] = #PBS -l nodes=1:ppn=4,walltime=200:00:00
  [1,5] = #PBS -N DEM
  [1,6] = #PBS -o ${PBS_JOBNAME}_output.txt
  [1,7] = 
  [1,8] = cd path
  [1,9] = 
  [1,10] = mpirun -np 4 lmp_auto < in.rotatingdrum
  [1,11] = -1
}
>> writeJob
>> close(fid)
error: called from
    close at line 77 column 7
error: close: first argument must be "all" or a figure handle
>> fclose(fd)
ans = 0
>>   fclose(fd)
error: fclose: invalid stream number = 8
>> exit

